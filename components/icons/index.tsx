import { SVGProps } from "react";

interface CircularLoadingProps extends SVGProps<SVGSVGElement> {
  stroke: string;
}

const ReactIcon = (props: SVGProps<SVGSVGElement>) => (
  <svg
    // class="w-6 h-6 text-gray-800 dark:text-white"
    aria-hidden="true"
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    fill="currentColor"
    viewBox="0 0 24 24"
    {...props}
  >
    <path d="M21.718 12c0-1.429-1.339-2.681-3.467-3.5.029-.18.077-.37.1-.545.217-2.058-.273-3.543-1.379-4.182-1.235-.714-2.983-.186-4.751 1.239C10.45 3.589 8.7 3.061 7.468 3.773c-1.107.639-1.6 2.124-1.379 4.182.018.175.067.365.095.545-2.127.819-3.466 2.071-3.466 3.5 0 1.429 1.339 2.681 3.466 3.5-.028.18-.077.37-.095.545-.218 2.058.272 3.543 1.379 4.182.376.213.803.322 1.235.316a5.987 5.987 0 0 0 3.514-1.56 5.992 5.992 0 0 0 3.515 1.56 2.44 2.44 0 0 0 1.236-.316c1.106-.639 1.6-2.124 1.379-4.182-.019-.175-.067-.365-.1-.545 2.132-.819 3.471-2.071 3.471-3.5Zm-6.01-7.548a1.5 1.5 0 0 1 .76.187c.733.424 1.055 1.593.884 3.212-.012.106-.043.222-.058.33-.841-.243-1.7-.418-2.57-.523a16.165 16.165 0 0 0-1.747-1.972 4.9 4.9 0 0 1 2.731-1.234Zm-7.917 8.781c.172.34.335.68.529 1.017.194.337.395.656.6.969a14.09 14.09 0 0 1-1.607-.376 14.38 14.38 0 0 1 .478-1.61Zm-.479-4.076a14.085 14.085 0 0 1 1.607-.376c-.205.313-.405.634-.6.969-.195.335-.357.677-.529 1.017-.19-.527-.35-1.064-.478-1.61ZM8.3 12a19.32 19.32 0 0 1 .888-1.75c.33-.568.69-1.118 1.076-1.65.619-.061 1.27-.1 1.954-.1.684 0 1.333.035 1.952.1a19.63 19.63 0 0 1 1.079 1.654c.325.567.621 1.15.887 1.746a18.869 18.869 0 0 1-1.953 3.403 19.218 19.218 0 0 1-3.931 0 20.169 20.169 0 0 1-1.066-1.653A19.324 19.324 0 0 1 8.3 12Zm7.816 2.25c.2-.337.358-.677.53-1.017.191.527.35 1.065.478 1.611a14.48 14.48 0 0 1-1.607.376c.202-.314.404-.635.597-.97h.002Zm.53-3.483c-.172-.34-.335-.68-.53-1.017a20.214 20.214 0 0 0-.6-.97c.542.095 1.078.22 1.606.376a14.111 14.111 0 0 1-.478 1.611h.002ZM12.217 6.34c.4.375.777.773 1.13 1.193-.37-.02-.746-.033-1.129-.033s-.76.013-1.131.033c.353-.42.73-.817 1.13-1.193Zm-4.249-1.7a1.5 1.5 0 0 1 .76-.187 4.9 4.9 0 0 1 2.729 1.233A16.253 16.253 0 0 0 9.71 7.658c-.87.105-1.728.28-2.569.524-.015-.109-.047-.225-.058-.331-.171-1.619.151-2.787.885-3.211ZM3.718 12c0-.9.974-1.83 2.645-2.506.218.857.504 1.695.856 2.506-.352.811-.638 1.65-.856 2.506C4.692 13.83 3.718 12.9 3.718 12Zm4.25 7.361c-.734-.423-1.056-1.593-.885-3.212.011-.106.043-.222.058-.331.84.243 1.697.418 2.564.524a16.37 16.37 0 0 0 1.757 1.982c-1.421 1.109-2.714 1.488-3.494 1.037Zm3.11-2.895c.374.021.753.034 1.14.034.387 0 .765-.013 1.139-.034a14.4 14.4 0 0 1-1.14 1.215 14.248 14.248 0 0 1-1.139-1.215Zm5.39 2.895c-.782.451-2.075.072-3.5-1.038a16.248 16.248 0 0 0 1.757-1.981 16.41 16.41 0 0 0 2.565-.523c.015.108.046.224.058.33.175 1.619-.148 2.789-.88 3.212Zm1.6-4.854A16.563 16.563 0 0 0 17.216 12c.352-.812.638-1.65.856-2.507 1.671.677 2.646 1.607 2.646 2.507 0 .9-.975 1.83-2.646 2.507h-.004Z" />
    <path d="M12.215 13.773a1.792 1.792 0 1 0-1.786-1.8v.006a1.787 1.787 0 0 0 1.786 1.794Z" />
  </svg>
);

const Lottie = (props: SVGProps<SVGSVGElement>) => (
  <svg
    width="40"
    height="40"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 288 288"
    {...props}
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 400 400"
      width="288"
      height="288"
    >
      <clipPath id="a">
        <path d="M0 0h400v400H0z"></path>
      </clipPath>
      <g clipPath="url(#a)">
        <path
          fill="#00ddb3"
          d="M298.783 0H101.217C45.317 0 0 45.317 0 101.217v197.566C0 354.683 45.316 400 101.217 400h197.566C354.683 400 400 354.683 400 298.783V101.217C400 45.317 354.683 0 298.783 0z"
          // class="color00ddb3 svgShape"
        ></path>
        <path
          fill="#ffffff"
          d="M304.035 89.598c-68.951 0-94.382 49.158-114.885 88.663l-13.486 25.248c-21.74 41.899-37.964 67.35-79.781 67.35a19.756 19.756 0 0 0-13.995 5.784 19.769 19.769 0 0 0-4.291 21.56 19.758 19.758 0 0 0 10.713 10.702 19.756 19.756 0 0 0 7.573 1.499c68.951 0 94.382-49.158 114.885-88.663l13.405-25.248c21.74-41.899 37.964-67.35 79.781-67.35a19.763 19.763 0 0 0 18.286-12.201 19.77 19.77 0 0 0-4.291-21.56 19.763 19.763 0 0 0-13.995-5.784z"
          // class="colorfff svgShape"
        ></path>
      </g>
    </svg>
  </svg>
);

const ExpoIcon = (props: SVGProps<SVGSVGElement>) => (
  <svg
    width="24"
    height="22"
    viewBox="0 0 24 22"
    fill="none"
    stroke="currentColor"
    {...props}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M11.39 8.269c.19-.277.397-.312.565-.312.168 0 .447.035.637.312 1.49 2.03 3.95 6.075 5.765 9.06 1.184 1.945 2.093 3.44 2.28 3.63.7.714 1.66.269 2.218-.541.549-.797.701-1.357.701-1.954 0-.407-7.958-15.087-8.759-16.309C14.027.98 13.775.683 12.457.683h-.988c-1.315 0-1.505.297-2.276 1.472C8.392 3.377.433 18.057.433 18.463c0 .598.153 1.158.703 1.955.558.81 1.518 1.255 2.218.54.186-.19 1.095-1.684 2.279-3.63 1.815-2.984 4.267-7.029 5.758-9.06z"
      fill="none"
    />
  </svg>
);
const SearchIcon = (props: SVGProps<SVGSVGElement>) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    {...props}
  >
    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
    <path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" />
    <path d="M21 21l-6 -6" />
  </svg>
);

const SunIcon = (props: SVGProps<SVGSVGElement>) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    {...props}
  >
    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
    <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
    <path d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7" />
  </svg>
);
const MoonIcon = (props: SVGProps<SVGSVGElement>) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    {...props}
  >
    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
    <path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z" />
  </svg>
);
const CheckIcon = (props: SVGProps<SVGSVGElement>) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    {...props}
  >
    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
    <path d="M5 12l5 5l10 -10" />
  </svg>
);

const ClipboardIcon = (props: SVGProps<SVGSVGElement>) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    {...props}
  >
    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
    <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2" />
    <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z" />
  </svg>
);

const SourceCodeIcon = (props: SVGProps<SVGSVGElement>) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    {...props}
  >
    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
    <path d="M14.5 4h2.5a3 3 0 0 1 3 3v10a3 3 0 0 1 -3 3h-10a3 3 0 0 1 -3 -3v-5" />
    <path d="M6 5l-2 2l2 2" />
    <path d="M10 9l2 -2l-2 -2" />
  </svg>
);

const ScreenShareIcon = (props: SVGProps<SVGSVGElement>) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    {...props}
  >
    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
    <path d="M21 12v3a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10a1 1 0 0 1 1 -1h9" />
    <path d="M7 20l10 0" />
    <path d="M9 16l0 4" />
    <path d="M15 16l0 4" />
    <path d="M17 4h4v4" />
    <path d="M16 9l5 -5" />
  </svg>
);

// View box is based on 50x50 size
// from: https://codepen.io/jczimm/pen/vEBpoL

const CIRCLE_RADIUS = 50 / 2;

const CircularLoading = ({ stroke, ...props }: CircularLoadingProps) => {
  const center = CIRCLE_RADIUS;

  return (
    <svg
      viewBox={`0 0 ${CIRCLE_RADIUS * 2} ${CIRCLE_RADIUS * 2}`}
      width={40}
      height={40}
      {...props}
    >
      <circle
        fill="none"
        stroke={stroke}
        strokeWidth={5}
        strokeLinecap="round"
        cx={CIRCLE_RADIUS}
        cy={CIRCLE_RADIUS}
        r={CIRCLE_RADIUS - 5}
      >
        <animateTransform
          attributeName="transform"
          attributeType="XML"
          type="rotate"
          from={`0 ${center} ${center}`}
          to={`360 ${center} ${center}`}
          dur="1.33s"
          repeatCount="indefinite"
        />
        <animate
          attributeName="stroke-dasharray"
          values="1,200; 89,200; 89 200;"
          dur="1s"
          repeatCount="indefinite"
        />
        <animate
          attributeName="stroke-dashoffset"
          values="0;-35;-124;"
          dur="1s"
          repeatCount="indefinite"
        />
      </circle>
    </svg>
  );
};

const R3Icon = (props: SVGProps<SVGSVGElement>) => (
  <svg
    width="69"
    height="40"
    viewBox="0 0 69 42"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      d="M1 25.2066V24.428L2.97086 22.9141C2.97086 22.9141 2.97086 21.4002 2.97086 21.2272C2.97086 21.0542 2.97086 20.1026 2.97086 20.1026L2.60268 19.4754C2.60268 19.4754 6.11124 17.0747 6.2845 16.9233C6.45776 16.7503 9.10001 15.2364 9.10001 15.2364L11.1575 14.5876C11.1575 14.5876 13.5182 14.4794 13.908 14.5876C14.2979 14.6957 17.6548 14.6957 17.6548 14.6957L18.7161 14.0901L22.4196 12.2951L26.5562 11.1705H29.6316L33.5083 11.949H39.3776L44.3589 11.1705L46.0915 10.1756L47.9541 9.22399L46.1132 9.00772C46.1132 9.00772 46.5463 8.25076 46.5896 8.18588C46.633 8.12099 47.7592 7.51543 47.7592 7.51543L49.0803 6.75847H47.4343C47.4343 6.75847 48.4955 5.89337 48.6038 5.72035C48.7121 5.54734 49.4052 5.26618 49.4052 5.26618L50.683 5.00665L52.5888 4.05505L53.7584 2.433C53.7584 2.433 55.0578 1.97882 55.2744 1.97882C55.491 1.97882 56.0108 1.97882 56.2274 1.97882C56.4439 1.97882 57.6568 1.15698 57.6568 1.15698L58.6963 2.02208L60.9271 3.1467L63.2878 4.98503L64.0242 6.3908L67.0562 9.02934L67.8792 10.4568L67.3378 12.0139L66.6664 12.2302L65.5402 12.5113L64.5656 11.949L61.6635 11.2786L60.3207 10.5L58.0899 10.327L56.314 11.3435L54.4514 16.2529L54.1699 19.0428L53.7151 20.8379L53.0437 21.9625L58.8263 23.9306L62.9629 26.8503L66.2766 29.1428L66.3849 30.0295L67.8792 31.1974L68.2691 32.495L65.8218 32.8843L64.414 30.4621L63.0062 29.1212L58.9779 26.1582H57.007L56.4439 28.3426L54.2565 31.0244H53.1953L51.1161 32.2139V30.116L51.6792 29.6186H53.022L54.1482 28.5589L54.8196 27.6073V26.1582L52.2423 25.3796L48.6038 26.288L46.3947 25.8771L44.0124 26.9152C44.0124 26.9152 36.2805 25.4445 36.1073 25.3364C35.934 25.2282 33.53 24.4497 33.53 24.4497L32.4688 24.5578H31.8623L33.1185 27.3045L34.7862 29.7051L40.5688 32.5599L41.76 33.252L41.9332 33.7278L43.7308 34.4415L44.099 35.0687L42.1281 35.8473L40.5471 34.874C40.5471 34.874 38.4896 33.7062 38.338 33.6629C38.1648 33.598 35.7608 32.0841 35.7608 32.0841C35.7608 32.0841 32.2522 31.4353 32.2522 31.2839C32.2522 31.1109 30.173 28.494 30.0647 28.2993C29.9565 28.1047 28.0289 25.531 28.0289 25.531L26.8377 24.8389L25.6032 28.9265L22.961 32.8411L23.0693 34.2901L25.0835 38.4858L26.7728 40.2809L26.2746 40.8432H23.9139L22.8527 39.0481V38.1614L19.9072 33.0573V31.9327L20.4704 30.9595L21.7698 28.083L21.9864 26.2447C21.9864 26.2447 19.2359 23.1736 19.0626 22.9357C18.8893 22.7195 17.9364 19.0212 17.9364 19.0212V16.7936C17.9364 16.7936 17.1567 16.7936 16.9834 16.7287C16.8102 16.6638 14.7527 17.6154 14.7527 17.6154C14.4062 17.6154 14.4062 17.6154 14.4062 17.6154L11.9372 18.221L10.1829 19.2375L8.40696 20.5351L6.50108 20.2539L5.09332 21.4867L3.68557 23.909L2.36444 25.1201L1 25.2066Z"
      fill="#C1C6E5"
    />
    <path
      d="M1.00002 40.8432H68.2691M1 25.2066V24.428L2.97086 22.9141C2.97086 22.9141 2.97086 21.4002 2.97086 21.2272C2.97086 21.0542 2.97086 20.1026 2.97086 20.1026L2.60268 19.4754C2.60268 19.4754 6.11124 17.0747 6.2845 16.9233C6.45776 16.7503 9.10001 15.2364 9.10001 15.2364L11.1575 14.5876C11.1575 14.5876 13.5182 14.4794 13.908 14.5876C14.2979 14.6957 17.6548 14.6957 17.6548 14.6957L18.7161 14.0901L22.4196 12.2951L26.5562 11.1705H29.6316L33.5083 11.949H39.3776L44.3589 11.1705L46.0915 10.1756L47.9541 9.22399L46.1132 9.00772C46.1132 9.00772 46.5463 8.25076 46.5896 8.18588C46.633 8.12099 47.7592 7.51543 47.7592 7.51543L49.0803 6.75847H47.4343C47.4343 6.75847 48.4955 5.89337 48.6038 5.72035C48.7121 5.54734 49.4052 5.26618 49.4052 5.26618L50.683 5.00665L52.5888 4.05505L53.7584 2.433C53.7584 2.433 55.0578 1.97882 55.2744 1.97882C55.491 1.97882 56.0108 1.97882 56.2274 1.97882C56.4439 1.97882 57.6568 1.15698 57.6568 1.15698L58.6963 2.02208L60.9271 3.1467L63.2878 4.98503L64.0242 6.3908L67.0562 9.02934L67.8792 10.4568L67.3378 12.0139L66.6664 12.2302L65.5402 12.5113L64.5656 11.949L61.6635 11.2786L60.3207 10.5L58.0899 10.327L56.314 11.3435L54.4514 16.2529L54.1699 19.0428L53.7151 20.8379L53.0437 21.9625L58.8263 23.9306L62.9629 26.8503L66.2766 29.1428L66.3849 30.0295L67.8792 31.1974L68.2691 32.495L65.8218 32.8843L64.414 30.4621L63.0062 29.1212L58.9779 26.1582H57.007L56.4439 28.3426L54.2565 31.0244H53.1953L51.1161 32.2139V30.116L51.6792 29.6186H53.022L54.1482 28.5589L54.8196 27.6073V26.1582L52.2423 25.3796L48.6038 26.288L46.3947 25.8771L44.0124 26.9152C44.0124 26.9152 36.2805 25.4445 36.1073 25.3364C35.934 25.2282 33.53 24.4497 33.53 24.4497L32.4688 24.5578H31.8623L33.1185 27.3045L34.7862 29.7051L40.5688 32.5599L41.76 33.252L41.9332 33.7278L43.7308 34.4415L44.099 35.0687L42.1281 35.8473L40.5471 34.874C40.5471 34.874 38.4896 33.7062 38.338 33.6629C38.1648 33.598 35.7608 32.0841 35.7608 32.0841C35.7608 32.0841 32.2522 31.4353 32.2522 31.2839C32.2522 31.1109 30.173 28.494 30.0647 28.2993C29.9565 28.1047 28.0289 25.531 28.0289 25.531L26.8377 24.8389L25.6032 28.9265L22.961 32.8411L23.0693 34.2901L25.0835 38.4858L26.7728 40.2809L26.2746 40.8432H23.9139L22.8527 39.0481V38.1614L19.9072 33.0573V31.9327L20.4704 30.9595L21.7698 28.083L21.9864 26.2447C21.9864 26.2447 19.2359 23.1736 19.0626 22.9357C18.8893 22.7195 17.9364 19.0212 17.9364 19.0212V16.7936C17.9364 16.7936 17.1567 16.7936 16.9834 16.7287C16.8102 16.6638 14.7527 17.6154 14.7527 17.6154C14.4062 17.6154 14.4062 17.6154 14.4062 17.6154L11.9372 18.221L10.1829 19.2375L8.40696 20.5351L6.50108 20.2539L5.09332 21.4867L3.68557 23.909L2.36444 25.1201L1 25.2066Z"
      stroke="#C1C6E5"
      strokeWidth="0.711842"
    />
  </svg>
);

const RnghIcon = (props: SVGProps<SVGSVGElement>) => (
  <svg
    width="34"
    height="52"
    viewBox="0 0 34 52"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M30.6572 16.8605C30.3591 14.9849 27.8099 13.5943 24.1596 13.0852C24.3782 9.27798 23.5577 6.4187 21.8385 5.75185C21.4433 5.59497 21.0054 5.56294 20.5453 5.64063L20.5442 5.63486C19.0128 5.89625 17.1877 7.36957 15.4725 9.67771C13.1352 8.0731 10.9524 7.29572 9.42087 7.55711L9.4218 7.56289C8.95399 7.64275 8.54724 7.81886 8.21454 8.1009C6.79821 9.30289 6.91059 12.2771 8.29967 15.7981C5.01179 17.4974 3.03791 19.654 3.33511 21.5238C3.53189 22.7619 4.70943 23.7886 6.53705 24.4899L6.56058 24.3937C6.6595 23.9896 6.81925 23.618 7.02713 23.2869C5.61034 22.7499 4.68474 22.0255 4.57145 21.3128C4.42745 20.4068 5.52024 19.0407 7.35411 17.8385C7.79912 17.5433 8.29235 17.2635 8.8041 16.9924C9.30134 18.0693 9.90616 19.1753 10.6158 20.293C10.5037 20.7418 10.4033 21.1851 10.3143 21.622C10.5054 21.639 10.6977 21.6722 10.8896 21.7227L11.48 21.8778C11.5028 21.8838 11.5254 21.89 11.5479 21.8964C11.5591 21.8405 11.5704 21.7846 11.5819 21.7286C11.637 21.8057 11.6924 21.8828 11.7483 21.9599C13.2242 22.4765 14.1846 23.9226 14.1676 25.4948C14.3493 25.4874 14.5321 25.4783 14.7159 25.4674C15.0489 25.8067 15.3832 26.1325 15.7181 26.4441L16.9007 25.7838C16.731 25.6312 16.5607 25.4739 16.3902 25.312C16.895 25.2496 17.4102 25.1795 17.928 25.0911C18.0324 25.0733 18.1364 25.0551 18.2401 25.0364L23.0782 22.3361C22.6679 22.4965 22.2456 22.6489 21.8127 22.792C22.0151 22.3012 22.2155 21.7986 22.3973 21.2874C22.5801 20.782 22.7452 20.2737 22.9002 19.7731C23.3026 20.4587 23.6648 21.1512 23.9834 21.8308L25.0969 21.2093C24.6165 20.1904 24.0404 19.1466 23.371 18.0923C23.6925 16.8044 23.9184 15.5626 24.0515 14.384C24.6313 14.4688 25.186 14.5757 25.7099 14.7056C27.8199 15.2405 29.2768 16.1655 29.4209 17.0715C29.5593 17.9785 28.4665 19.3446 26.6326 20.5468C26.5546 20.5985 26.4751 20.6499 26.3943 20.7007C27.0519 20.5828 27.7221 20.6614 28.3284 20.9132C29.9799 19.591 30.8631 18.1556 30.6572 16.8605ZM16.501 10.4268C18.0361 8.37165 19.5855 7.12351 20.7434 6.92275L20.7443 6.92851C21.0004 6.8848 21.2147 6.90156 21.403 6.97019C22.2319 7.29107 22.8329 8.94897 22.9271 11.1972C22.952 11.7502 22.9426 12.3386 22.9129 12.9424C21.7773 12.8517 20.5515 12.8416 19.2765 12.9169C18.3548 11.9776 17.421 11.1412 16.501 10.4268ZM9.62544 8.84405C10.7782 8.6473 12.6393 9.30768 14.7309 10.7349C14.086 11.7163 13.4596 12.8131 12.8886 14.0072C11.652 14.3605 10.4942 14.7775 9.44757 15.2465C9.22776 14.6913 9.0441 14.1477 8.89196 13.6224C8.27981 11.4625 8.33038 9.69342 9.00976 9.10918C9.16032 8.97679 9.37017 8.89356 9.62635 8.84983L9.62544 8.84405ZM22.7944 14.2489C22.7068 15.0285 22.5724 15.8397 22.4048 16.6567C22.1032 16.234 21.7903 15.8132 21.4552 15.3962C21.1257 14.9782 20.7811 14.5747 20.4386 14.1827C21.2487 14.1689 22.0356 14.1887 22.7944 14.2489ZM21.2206 20.8303C20.9101 21.6835 20.582 22.4983 20.2289 23.264C19.411 23.4805 18.5766 23.6646 17.7299 23.8089C16.8891 23.9525 16.0418 24.0557 15.2065 24.1271C14.6351 23.5193 14.0675 22.8633 13.5101 22.164C12.9668 21.4803 12.4604 20.7784 11.9867 20.065C12.2091 19.2327 12.4761 18.3929 12.7736 17.5656C13.0841 16.7124 13.4122 15.8976 13.7652 15.132C14.5832 14.9153 15.4176 14.7314 16.2642 14.5869C17.105 14.4434 17.9524 14.3403 18.7877 14.2688C19.3591 14.8767 19.9266 15.5326 20.484 16.2318C21.0275 16.9155 21.5338 17.6175 22.0074 18.3309C21.7796 19.1641 21.5183 20.003 21.2206 20.8303ZM15.755 11.4907C16.3608 11.9564 16.977 12.4855 17.5967 13.0732C17.0917 13.1357 16.5767 13.2058 16.0587 13.2942C15.5352 13.3836 15.0191 13.4835 14.5169 13.5989C14.9108 12.8381 15.3307 12.1322 15.755 11.4907ZM12.174 15.5933C11.9718 16.0842 11.7713 16.5867 11.5895 17.0979C11.4067 17.6033 11.2406 18.1058 11.0856 18.6065C10.662 17.8845 10.2829 17.1549 9.95201 16.4408C10.6531 16.1374 11.3969 15.8504 12.174 15.5933Z"
      fill="#99A3C7"
    />
    <path
      d="M28.5927 23.7696C28.1007 22.8867 27.0112 22.5842 26.1592 23.0939L11.1956 32.047C10.7616 32.3097 10.2204 31.9049 10.3397 31.3989L11.7158 25.565C11.9494 24.5746 11.364 23.5756 10.4084 23.3336C9.4527 23.0916 8.48863 23.6982 8.25504 24.6885C7.68117 27.1214 4.06352 36.5975 5.14411 38.537L9.02687 45.5058C9.30422 46.0036 9.78995 46.3396 10.3438 46.3706C11.9628 46.4616 15.5117 46.4376 18.3198 44.8337L18.3207 44.8352L24.4914 41.1434C25.3434 40.6337 25.6352 39.5048 25.1433 38.6219C24.6515 37.739 23.5621 37.4366 22.71 37.9463L23.4814 37.4848C24.3334 36.9752 24.6253 35.8462 24.1333 34.9633C23.6415 34.0804 22.552 33.7779 21.7 34.2875L22.4713 33.8261C23.3234 33.3164 23.6153 32.1875 23.1233 31.3046C22.6315 30.4217 21.542 30.1193 20.69 30.629L27.9405 26.2911C28.7926 25.7815 29.0845 24.6525 28.5927 23.7696Z"
      fill="white"
      stroke="#001A72"
      strokeWidth="1.77127"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

export const MyIcons = {
  React: ReactIcon,
  Lottie: Lottie,
  ExpoIcon: ExpoIcon,
  SearchIcon: SearchIcon,
  SunIcon: SunIcon,
  MoonIcon: MoonIcon,
  CheckIcon: CheckIcon,
  ClipboardIcon: ClipboardIcon,
  SourceCodeIcon: SourceCodeIcon,
  ScreenShareIcon: ScreenShareIcon,
  CircularLoading: CircularLoading,
  RnghIcon: RnghIcon,
  R3Icon: R3Icon,
};
